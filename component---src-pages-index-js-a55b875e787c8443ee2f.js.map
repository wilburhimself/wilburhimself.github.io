{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","_React$Component","apply","arguments","_inheritsLoose","prototype","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","React","createElement","Layout","location","SEO","keywords","Bio","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","Link","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt","Component"],"mappings":"mMAM4C,IAEtCA,EAAS,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAiCZ,OAjCYC,YAAAJ,EAAAC,GAAAD,EAAAK,UACbC,OAAA,WACE,MAAM,KAAEC,GAASC,KAAKC,MAChBC,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACEC,IAAAC,cAACC,IAAM,CAACC,SAAUZ,KAAKC,MAAMW,SAAUP,MAAOH,GAC5CO,IAAAC,cAACG,IAAG,CACFR,MAAM,YACNS,SAAU,CAAC,OAAD,iCAEZL,IAAAC,cAACK,IAAG,MACHT,EAAMU,IAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAMZ,EAAQa,EAAKC,YAAYd,OAASa,EAAKE,OAAOC,KACpD,OACEZ,IAAAC,cAAA,OAAKY,IAAKJ,EAAKE,OAAOC,MACpBZ,IAAAC,cAAA,MACEa,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3BhB,IAAAC,cAACgB,OAAI,CAACH,MAAO,CAAEI,UAAU,QAAWC,GAAIV,EAAKE,OAAOC,MACjDhB,IAGLI,IAAAC,cAAA,aAAQQ,EAAKC,YAAYU,MACzBpB,IAAAC,cAAA,KAAGoB,wBAAyB,CAAEC,OAAQb,EAAKc,gBAMtDxC,EAjCY,CAASiB,IAAMwB,WAoCfzC","file":"component---src-pages-index-js-a55b875e787c8443ee2f.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}