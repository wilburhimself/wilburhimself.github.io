{"componentChunkName":"component---src-templates-blog-post-js","path":"/08-hash-maps/","result":{"data":{"site":{"siteMetadata":{"title":"Rants & Ramblings","author":"Wilbur Suero"}},"markdownRemark":{"id":"9251257a-731f-5a53-81b7-effc7b75daa8","excerpt":"A hash map, also known as a dictionary or associative array, is a data structure that stores key-value pairs and provides fast access to the values based on…","html":"<p>A hash map, also known as a dictionary or associative array, is a data structure that stores key-value pairs and provides fast access to the values based on their keys. In Ruby, the hash map data structure is implemented as a hash, which is represented by curly braces <code class=\"language-text\">{}</code> and each key-value pair is separated by a comma <code class=\"language-text\">,</code>.</p>\n<p>Let’s now look at some examples of hash maps in Ruby.</p>\n<p><strong>Example 1: Counting occurrences of elements in an array</strong></p>\n<p>In this example, we’ll create a hash map to count the occurrences of each element in an array.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># Define the array</span>\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Create a hash map to count the occurrences of each element</span>\ncounts <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\narr<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>element<span class=\"token operator\">|</span>\n  <span class=\"token keyword\">if</span> counts<span class=\"token punctuation\">[</span>element<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">nil</span><span class=\"token operator\">?</span>\n    counts<span class=\"token punctuation\">[</span>element<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">else</span>\n    counts<span class=\"token punctuation\">[</span>element<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\"># Print the counts</span>\nputs counts <span class=\"token comment\"># Output: {1=>2, 2=>2, 3=>2, 4=>1}</span></code></pre></div>\n<p><strong>Example 2: Finding the frequency of words in a string</strong></p>\n<p>In this example, we’ll create a hash map to find the frequency of words in a string.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># Define the string</span>\nstr <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\"</span></span>\n\n<span class=\"token comment\"># Create a hash map to find the frequency of words in the string</span>\nwords <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\" \"</span></span><span class=\"token punctuation\">)</span>\nfrequency <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nwords<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>word<span class=\"token operator\">|</span>\n  <span class=\"token keyword\">if</span> frequency<span class=\"token punctuation\">[</span>word<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">nil</span><span class=\"token operator\">?</span>\n    frequency<span class=\"token punctuation\">[</span>word<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">else</span>\n    frequency<span class=\"token punctuation\">[</span>word<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\"># Print the frequency of words</span>\nputs frequency <span class=\"token comment\"># Output: {\"Ruby\"=>1, \"is\"=>1, \"a\"=>2, \"dynamic,\"=>1, \"open\"=>1, \"source\"=>1, \"programming\"=>1, \"language\"=>1, \"with\"=>1, \"focus\"=>1, \"on\"=>1, \"simplicity\"=>1, \"and\"=>1, \"productivity.\"=>1}</span></code></pre></div>\n<p><strong>Example 3: Grouping elements of an array by their type</strong></p>\n<p>In this example, we’ll create a hash map to group the elements of an array by their type.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># Define the array</span>\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"Hello\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token symbol\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Create a hash map to group the elements of the array by their type</span>\ngrouped <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\narr<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>element<span class=\"token operator\">|</span>\n  type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span>\n  <span class=\"token class-name\">if</span> grouped<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">nil</span><span class=\"token operator\">?</span>\n    grouped<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>element<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">else</span>\n    grouped<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\"># Print the grouped elements</span>\nputs grouped <span class=\"token comment\"># Output: {Fixnum=>[1, 2], String=>[\"Hello\"], Float=>[2.0], Array=>[[1, 2, 3]], Hash=>[{:a=>1, :b=>2}]}</span></code></pre></div>\n<h2><strong>Practical Usage of Hash Maps in Ruby</strong></h2>\n<p>Hash maps are widely used in Ruby for various purposes such as:</p>\n<ul>\n<li>Storing configuration settings</li>\n<li>Counting occurrences of elements in an array</li>\n<li>Finding the frequency of words in a string</li>\n<li>Grouping elements of an array by their type</li>\n<li>Implementing memoization</li>\n<li>Implementing caches</li>\n<li>Implementing symbol tables in compilers</li>\n</ul>\n<p>In this blog post, we learned about hash map implementation in Ruby and saw several examples of how they can be used in practice. From counting occurrences of elements in an array to grouping elements of an array by their type, hash maps are a versatile data structure that can make our lives as developers much easier.</p>\n<p>I hope this article helped give you a deeper understanding of hash maps and how to implement them in Ruby. If you have any questions, comments, or examples of your own, feel free to reach out. I’d love to hear from you!</p>\n<p>Remember to share your thoughts, and other implementations in different languages, or simply keep in touch.</p>\n<p>Thank you for reading!</p>","frontmatter":{"title":"Hash Maps","date":"February 11, 2023"}}},"pageContext":{"slug":"/08-hash-maps/","previous":{"fields":{"slug":"/07-stacks-and-queues/"},"frontmatter":{"title":"Stacks and Queues"}},"next":{"fields":{"slug":"/linked-lists/"},"frontmatter":{"title":"Linked lists"}}}},"staticQueryHashes":["2418676009","3128451518"]}