---
import { getCollection } from 'astro:content';
import BlogLayout from '../../../layouts/BlogLayout.astro';

export async function getStaticPaths() {
  const allPosts = (await getCollection('blog')).sort((a, b) => {
    const dateA = new Date(a.data.date);
    const dateB = new Date(b.data.date);
    return dateB.getTime() - dateA.getTime();
  });
  
  const POSTS_PER_PAGE = 10;
  const totalPages = Math.ceil(allPosts.length / POSTS_PER_PAGE);
  
  return Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => ({
    params: { page: page.toString() },
  }));
}

const { page: pageParam } = Astro.params;
const page = parseInt(pageParam);

const allPosts = (await getCollection('blog')).sort((a, b) => {
  const dateA = new Date(a.data.date);
  const dateB = new Date(b.data.date);
  return dateB.getTime() - dateA.getTime();
});

const POSTS_PER_PAGE = 10;
const totalPages = Math.ceil(allPosts.length / POSTS_PER_PAGE);

// Redirect page 1 to the main blog index
if (page === 1) {
  Astro.response.status = 301;
  Astro.response.headers.set('Location', '/');
}

const posts = allPosts.slice(
  (page - 1) * POSTS_PER_PAGE,
  page * POSTS_PER_PAGE
);
---

<BlogLayout title={`Page ${page}`}>
  <div class="posts">
    {
      posts.map((post) => (
        <a href={`/blog/${post.slug}/`} class="post-link block border-b border-gray-light pb-4 mb-16">
          <h2 class="post-title mb-0">{post.data.title}</h2>
          <p class="post-meta text-sm">{post.data.date}</p>
          <p class="post-excerpt">{post.data.excerpt || 'Read more...'}</p>
        </a>
      ))
    }
  </div>
  
  <!-- Pagination -->
  <div class="pagination flex justify-between items-center mt-16">
    {page > 1 && (
      <a href={page === 2 ? '/' : `/blog/page/${page - 1}/`} class="text-gray-dark hover:text-near-black">
        ← Previous
      </a>
    )}
    {page === 1 && <span></span>}
    
    <div class="pagination-links">
      {
        Array.from({ length: totalPages }, (_, i) => i + 1).map((pageNum) => (
          <a 
            href={pageNum === 1 ? '/' : `/blog/page/${pageNum}/`} 
            class={`px-3 py-1 mx-1 rounded ${pageNum === page ? 'bg-gray-200 font-bold' : 'hover:bg-gray-100'}`}
          >
            {pageNum}
          </a>
        ))
      }
    </div>
    
    {page < totalPages && (
      <a href={`/blog/page/${page + 1}/`} class="text-gray-dark hover:text-near-black">
        Next →
      </a>
    )}
    {page === totalPages && <span></span>}
  </div>
</BlogLayout>